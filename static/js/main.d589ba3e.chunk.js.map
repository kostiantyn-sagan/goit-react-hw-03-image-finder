{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","services/pixabay-api.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Searchbar/Searchbar.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","ImageGalleryItem","webformatURL","description","onImageClick","className","s","src","alt","ImageGalleryItemImage","onClick","Button","handleLoadMoreBtn","type","API_KEY","BASE_URL","api","fetchImages","searchTerm","page","searchParams","URLSearchParams","q","key","image_type","orientation","per_page","fetch","then","response","ok","json","Promise","reject","Error","Status","ImageGallery","state","images","error","status","setState","pixabayAPI","props","searchQuery","hits","catch","prevProps","prevState","prevQuery","nextQuery","this","prevImages","nextImages","length","toast","message","window","scrollBy","top","document","documentElement","clientHeight","behavior","height","width","visible","style","textAlign","map","largeImageURL","tags","Component","modalRoot","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","currentTarget","target","addEventListener","removeEventListener","createPortal","Overlay","children","Searchbar","handleQueryChange","value","toLowerCase","handleSubmit","preventDefault","trim","onSubmit","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","App","showModal","largeImageDescr","toggleModal","handleFormSubmit","showLargeImage","url","descr","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d589ba3e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2XXks\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2ZHFn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3rluN\",\"Modal\":\"Modal_Modal__1g6hY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2zQUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3aj6O\"};","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({\n  webformatURL,\n  description,\n  onImageClick,\n}) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={description}\n        className={s.ImageGalleryItemImage}\n        onClick={onImageClick}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ handleLoadMoreBtn }) {\n  return (\n    <button type=\"submit\" className={s.Button} onClick={handleLoadMoreBtn}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  handleLoadMoreBtn: PropTypes.func.isRequired,\n};\n","const API_KEY = '19475707-408c9466706baaa6817e821a9';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nfunction fetchImages(searchTerm, page = 1) {\n  const searchParams = new URLSearchParams({\n    q: searchTerm,\n    page,\n    key: API_KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: 12,\n  });\n\n  return fetch(`${BASE_URL}?${searchParams}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error(`There are no images for the search query ${searchTerm}`),\n    );\n  });\n}\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Button from '../Button';\nimport pixabayAPI from '../../services/pixabay-api';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default class ImageGallery extends Component {\n  static propTypes = {\n    searchQuery: PropTypes.string.isRequired,\n    onImageClick: PropTypes.func.isRequired,\n  };\n\n  state = {\n    images: null,\n    error: null,\n    status: Status.IDLE,\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevProps.searchQuery;\n    const nextQuery = this.props.searchQuery;\n    const prevImages = prevState.images;\n    const { status, page, images: nextImages } = this.state;\n\n    if (prevQuery !== nextQuery) {\n      this.setState({ status: Status.PENDING, page: 1, images: null });\n\n      pixabayAPI\n        .fetchImages(nextQuery)\n        .then(({ hits }) => {\n          if (hits.length === 0) {\n            return Promise.reject(\n              new Error(\n                `There are no images or photos for the search query ${nextQuery}`,\n              ),\n            );\n          }\n\n          this.setState(({ page }) => ({\n            images: hits,\n            status: Status.RESOLVED,\n            page: page + 1,\n          }));\n        })\n        .catch(error => {\n          this.setState({ error, status: Status.REJECTED });\n          toast.error(error.message);\n        });\n    }\n\n    if (\n      status === 'resolved' &&\n      page > 2 &&\n      prevImages.length !== nextImages.length\n    ) {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 166,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  handleLoadMoreBtn = () => {\n    this.setState({ status: Status.PENDING });\n\n    pixabayAPI\n      .fetchImages(this.props.searchQuery, this.state.page)\n      .then(({ hits }) => {\n        this.setState(({ images, page }) => ({\n          images: [...images, ...hits],\n          status: Status.RESOLVED,\n          page: page + 1,\n        }));\n      })\n      .catch(error => {\n        this.setState({ error, status: Status.REJECTED });\n      });\n  };\n\n  render() {\n    const { images, status, page } = this.state;\n    const { onImageClick } = this.props;\n\n    if (status === 'pending' && page === 1) {\n      return (\n        <Loader\n          type=\"ThreeDots\"\n          height={80}\n          width={80}\n          visible={true}\n          style={{ textAlign: 'center' }}\n        />\n      );\n    }\n\n    return (\n      <>\n        {images && (\n          <ul className={s.ImageGallery}>\n            {images.map(({ webformatURL, largeImageURL, tags }) => (\n              <ImageGalleryItem\n                key={webformatURL}\n                webformatURL={webformatURL}\n                description={tags}\n                onImageClick={() => onImageClick(largeImageURL, tags)}\n              />\n            ))}\n          </ul>\n        )}\n        {status === 'resolved' && (\n          <Button handleLoadMoreBtn={this.handleLoadMoreBtn} />\n        )}\n        {status === 'pending' && (\n          <Loader\n            type=\"ThreeDots\"\n            height={80}\n            width={80}\n            visible={true}\n            style={{ textAlign: 'center' }}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport { ImSearch } from 'react-icons/im';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    searchQuery: '',\n  };\n\n  handleQueryChange = e => {\n    this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.searchQuery.trim() === '') {\n      toast.error('Enter your search term.');\n      return;\n    }\n\n    this.props.onSubmit(this.state.searchQuery);\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <ImSearch />\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.searchQuery}\n            onChange={this.handleQueryChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport ImageGallery from './components/ImageGallery';\nimport Modal from './components/Modal';\nimport Searchbar from './components/Searchbar';\n\nexport default class App extends Component {\n  state = {\n    showModal: false,\n    searchQuery: '',\n    largeImageURL: '',\n    largeImageDescr: '',\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  handleFormSubmit = searchQuery => {\n    this.setState({ searchQuery });\n  };\n\n  showLargeImage = (url, descr) => {\n    this.setState({ largeImageURL: url, largeImageDescr: descr });\n    this.toggleModal();\n  };\n\n  render() {\n    const { showModal, largeImageURL, largeImageDescr } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery\n          searchQuery={this.state.searchQuery}\n          onImageClick={this.showLargeImage}\n        />\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImageURL} alt={largeImageDescr} />\n          </Modal>\n        )}\n        <ToastContainer autoClose={3000} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2vYEt\",\"SearchForm\":\"Searchbar_SearchForm__vlWvG\",\"SearchFormButton\":\"Searchbar_SearchFormButton__63myd\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__SRqXs\",\"SearchFormInput\":\"Searchbar_SearchFormInput__nVYsN\"};"],"sourceRoot":""}